{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0","program":"/home/conor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","seq","/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=96392c09528cb126","-C","extra-filename=-96392c09528cb126","--out-dir","/home/conor/Documents/code/Projects/Rust/GoFish/target/rls/debug/deps","-L","dependency=/home/conor/Documents/code/Projects/Rust/GoFish/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/conor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/conor/Documents/code/Projects/Rust/GoFish/target/rls/debug/deps/libseq-96392c09528cb126.rmeta"},"prelude":{"crate_id":{"name":"seq","disambiguator":[6408182355930783995,6599578732989454640]},"crate_root":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src","external_crates":[{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}}],"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":0,"byte_end":25452,"line_start":1,"line_end":949,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":0,"byte_end":25452,"line_start":1,"line_end":949,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":40},{"krate":0,"index":53},{"krate":0,"index":5},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":31},{"krate":0,"index":35}],"decl_id":null,"docs":" The module `seq` provides the lightweight, generic sequence container `Seq` for unmovable data\n and is embedded into the program during compile time. Elements of `Seq` are\n stacked on top of each other.","sig":null,"attributes":[{"value":"/ The module `seq` provides the lightweight, generic sequence container `Seq` for unmovable data","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":52,"byte_end":150,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ and is embedded into the program during compile time. Elements of `Seq` are","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":151,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ stacked on top of each other.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":231,"byte_end":264,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":265,"byte_end":268,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Initially a sequence is empty. A longer sequence is constructed attaching a new _head_","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":269,"byte_end":359,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/ to the existing sequence, representing the _tail_.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":360,"byte_end":414,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":415,"byte_end":418,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Multiple sequences may share the same _tail_, permitting memory-efficient organisation of","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":419,"byte_end":512,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ hierarchical data.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":513,"byte_end":535,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":536,"byte_end":539,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Put this in your Cargo.toml:","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":540,"byte_end":572,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/ ```toml","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":573,"byte_end":584,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ ## Cargo.toml file","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":585,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ [dependencies]","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":608,"byte_end":626,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/ seq = \"0.5\"","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":627,"byte_end":642,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":643,"byte_end":650,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ The \"default\" usage of this type as a queue is to use [`Empty`] or [`ConsRef`] to construct a","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":651,"byte_end":748,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ queue, and [`head`] and [`tail`] to deconstruct a queue into head and remaining","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":749,"byte_end":832,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ tail of a sequence.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":833,"byte_end":856,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":857,"byte_end":860,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":861,"byte_end":875,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":876,"byte_end":879,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Constructing two sequences seq1 as `[1,0]` and seq2 as `[2,1,0]`, sharing data with `seq1`","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":880,"byte_end":974,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":975,"byte_end":986,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":987,"byte_end":1004,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1005,"byte_end":1008,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // constructing the sequence 'seq1'","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1009,"byte_end":1048,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ const seq1: Seq<i32> = Seq::ConsRef(1, &Seq::ConsRef(0, &Seq::Empty));","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1049,"byte_end":1123,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1124,"byte_end":1127,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // construction the sequence 'seq2' sharing data with 'seq1'","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1128,"byte_end":1192,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ const seq2: Seq<i32> = Seq::ConsRef(2, &seq1);","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1193,"byte_end":1243,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1244,"byte_end":1251,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ Deconstructing a sequence","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1252,"byte_end":1281,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1282,"byte_end":1293,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1294,"byte_end":1311,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1312,"byte_end":1315,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ fn print_head<'a>(seq: &'a Seq<i32>) {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1316,"byte_end":1358,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/    println!(\"head {}\", seq.head().unwrap());","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1359,"byte_end":1407,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1408,"byte_end":1413,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1414,"byte_end":1421,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ Extend an existing sequence. Note the lifetime of the return type matches the one of the tail.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1422,"byte_end":1520,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1521,"byte_end":1532,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1533,"byte_end":1550,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1551,"byte_end":1554,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ fn extend<'a>(head: i32, tail: &'a Seq<i32>) -> Seq<'a, i32> {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1555,"byte_end":1621,"line_start":47,"line_end":47,"column_start":1,"column_end":67}},{"value":"/    return Seq::ConsRef(head, tail);","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1622,"byte_end":1661,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1662,"byte_end":1667,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1668,"byte_end":1675,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ Extend an existing sequence with dynamic element residing in heap-memory","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1676,"byte_end":1752,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1753,"byte_end":1764,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1765,"byte_end":1782,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1783,"byte_end":1786,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ fn extend_boxed<'a>(head: i32, tail: &'a Seq<i32>) -> Box<Seq<'a, i32>> {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1787,"byte_end":1864,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/    return Box::new(Seq::ConsRef(head, tail));","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1865,"byte_end":1914,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1915,"byte_end":1920,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1921,"byte_end":1928,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ Iterate a sequence","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1929,"byte_end":1951,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1952,"byte_end":1963,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1964,"byte_end":1981,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1982,"byte_end":1985,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn sum_up(seq: &Seq<i32>) -> i32 {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":1986,"byte_end":2024,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/    return seq.into_iter().fold(0, |x, y| x + y);","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2025,"byte_end":2077,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2078,"byte_end":2083,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2084,"byte_end":2091,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ [`Empty`]: enum.Seq.html#variant.Empty","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2092,"byte_end":2134,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/ [`ConsRef`]: enum.Seq.html#variant.ConsRef","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2135,"byte_end":2181,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/ [`tail`]:  #method.tail","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2182,"byte_end":2209,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/ [`head`]:  #method.head","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2210,"byte_end":2237,"line_start":70,"line_end":70,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":43},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4036,"byte_end":4041,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Empty","qualname":"::Seq::Empty","value":"Seq::Empty","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The empty sequence\n","sig":null,"attributes":[{"value":"/ The empty sequence","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4009,"byte_end":4031,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":45},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4118,"byte_end":4125,"line_start":133,"line_end":133,"column_start":5,"column_end":12},"name":"ConsRef","qualname":"::Seq::ConsRef","value":"Seq::ConsRef(T, &'a Seq)","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Constructing a sequence with head data and reference to a tail\n","sig":null,"attributes":[{"value":"/ Constructing a sequence with head data and reference to a tail","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4047,"byte_end":4113,"line_start":132,"line_end":132,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":49},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4225,"byte_end":4232,"line_start":135,"line_end":135,"column_start":5,"column_end":12},"name":"ConsOwn","qualname":"::Seq::ConsOwn","value":"Seq::ConsOwn(T, Box<Seq>)","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Constructing a sequence with head data and reference to boxed tail\n","sig":null,"attributes":[{"value":"/ Constructing a sequence with head data and reference to boxed tail","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4150,"byte_end":4220,"line_start":134,"line_end":134,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":40},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3988,"byte_end":3991,"line_start":129,"line_end":129,"column_start":10,"column_end":13},"name":"Seq","qualname":"::Seq","value":"pub enum Seq<'a, T: 'a> {\n\n    /// The empty sequence\n    Empty,\n\n    /// Constructing a sequence with head data and reference to a tail\n    ConsRef(T, &'a Seq),\n\n    /// Constructing a sequence with head data and reference to boxed tail\n    ConsOwn(T, Box<Seq>),\n}","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":49}],"decl_id":null,"docs":" A single-ended, growable, unmovable queue of data, linking constant data with dynamic data.","sig":null,"attributes":[{"value":"/ A single-ended, growable, unmovable queue of data, linking constant data with dynamic data.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2279,"byte_end":2374,"line_start":75,"line_end":75,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2375,"byte_end":2378,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The \"default\" usage of this type as a queue is to use [`Empty`] or [`ConsRef`] to construct a","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2379,"byte_end":2476,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ queue, and [`head`] and [`tail`] to deconstruct a queue into head and remaining","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2477,"byte_end":2560,"line_start":78,"line_end":78,"column_start":1,"column_end":84}},{"value":"/ tail of a sequence.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2561,"byte_end":2584,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2585,"byte_end":2588,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2589,"byte_end":2603,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2604,"byte_end":2607,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Constructing two sequences seq1 as `[1,0]` and seq2 as `[2,1,0]`, sharing data with `seq1`","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2608,"byte_end":2702,"line_start":83,"line_end":83,"column_start":1,"column_end":95}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2703,"byte_end":2714,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2715,"byte_end":2732,"line_start":85,"line_end":85,"column_start":1,"column_end":18}},{"value":"/ // constructing the sequence 'seq1'","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2733,"byte_end":2772,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/ const seq1: Seq<i32> = Seq::ConsRef(1, &Seq::ConsRef(0, &Seq::Empty));","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2773,"byte_end":2847,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2848,"byte_end":2851,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // construction the sequence 'seq2' sharing data with 'seq1'","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2852,"byte_end":2916,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/ const seq2: Seq<i32> = Seq::ConsRef(2, &seq1);","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2917,"byte_end":2967,"line_start":90,"line_end":90,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2968,"byte_end":2975,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ Deconstructing a sequence","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":2976,"byte_end":3005,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3006,"byte_end":3017,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3018,"byte_end":3035,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3036,"byte_end":3039,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ fn print_head<'a>(seq: &'a Seq<i32>) {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3040,"byte_end":3082,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/    println!(\"head {}\", seq.head().unwrap());","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3083,"byte_end":3131,"line_start":97,"line_end":97,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3132,"byte_end":3137,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3138,"byte_end":3145,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ Extend an existing sequence. Note the lifetime of the return type matches the one of the tail.","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3146,"byte_end":3244,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3245,"byte_end":3256,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3257,"byte_end":3274,"line_start":102,"line_end":102,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3275,"byte_end":3278,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ fn extend<'a>(head: i32, tail: &'a Seq<i32>) -> Seq<'a, i32> {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3279,"byte_end":3345,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/    return Seq::ConsRef(head, tail);","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3346,"byte_end":3385,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3386,"byte_end":3391,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3392,"byte_end":3399,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ Extend an existing sequence with dynamic element residing in heap-memory","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3400,"byte_end":3476,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3477,"byte_end":3488,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3489,"byte_end":3506,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3507,"byte_end":3510,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ fn extend_boxed<'a>(head: i32, tail: &'a Seq<i32>) -> Box<Seq<'a, i32>> {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3511,"byte_end":3588,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/    return Box::new(Seq::ConsRef(head, tail));","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3589,"byte_end":3638,"line_start":113,"line_end":113,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3639,"byte_end":3644,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3645,"byte_end":3652,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ Iterate a sequence","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3653,"byte_end":3675,"line_start":116,"line_end":116,"column_start":1,"column_end":23}},{"value":"/ ```rust","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3676,"byte_end":3687,"line_start":117,"line_end":117,"column_start":1,"column_end":12}},{"value":"/ use seq::Seq;","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3688,"byte_end":3705,"line_start":118,"line_end":118,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3706,"byte_end":3709,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ fn sum_up(seq: &Seq<i32>) -> i32 {","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3710,"byte_end":3748,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/    return seq.into_iter().fold(0, |x, y| x + y);","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3749,"byte_end":3801,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3802,"byte_end":3807,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3808,"byte_end":3815,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ [`Empty`]: enum.Seq.html#variant.Empty","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3816,"byte_end":3858,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/ [`ConsRef`]: enum.Seq.html#variant.ConsRef","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3859,"byte_end":3905,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/ [`tail`]:  #method.tail","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3906,"byte_end":3933,"line_start":126,"line_end":126,"column_start":1,"column_end":28}},{"value":"/ [`head`]:  #method.head","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":3934,"byte_end":3961,"line_start":127,"line_end":127,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4376,"byte_end":4380,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"head","qualname":"<Seq>::head","value":"pub fn head(&'a Self) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the head-element\n","sig":null,"attributes":[{"value":"/ Returns a reference to the head-element","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4321,"byte_end":4364,"line_start":140,"line_end":140,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4662,"byte_end":4666,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"tail","qualname":"<Seq>::tail","value":"pub fn tail(&'a Self) -> Option<&'a Seq<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns reference to the tail\n","sig":null,"attributes":[{"value":"/ Returns reference to the tail","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4617,"byte_end":4650,"line_start":149,"line_end":149,"column_start":5,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":5993,"byte_end":5998,"line_start":194,"line_end":194,"column_start":8,"column_end":13},"name":"empty","qualname":"::empty","value":"pub fn empty<T>() -> &'static Seq","parent":null,"children":[],"decl_id":null,"docs":" Function returns static reference to empty list\n","sig":null,"attributes":[{"value":"/ Function returns static reference to empty list","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":5934,"byte_end":5985,"line_start":193,"line_end":193,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":7834,"byte_end":7845,"line_start":250,"line_end":250,"column_start":12,"column_end":23},"name":"SeqIterator","qualname":"::SeqIterator","value":"SeqIterator {  }","parent":null,"children":[{"krate":0,"index":34}],"decl_id":null,"docs":" The sequence iterator representation\n","sig":null,"attributes":[{"value":"/ The sequence iterator representation","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":7782,"byte_end":7822,"line_start":249,"line_end":249,"column_start":1,"column_end":41}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4304,"byte_end":4307,"line_start":139,"line_end":139,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":6108,"byte_end":6111,"line_start":197,"line_end":197,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":6310,"byte_end":6313,"line_start":202,"line_end":202,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":7078,"byte_end":7081,"line_start":220,"line_end":220,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":7966,"byte_end":7977,"line_start":255,"line_end":255,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":4304,"byte_end":4307,"line_start":139,"line_end":139,"column_start":17,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":6108,"byte_end":6111,"line_start":197,"line_end":197,"column_start":25,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":6310,"byte_end":6313,"line_start":202,"line_end":202,"column_start":38,"column_end":41},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":7078,"byte_end":7081,"line_start":220,"line_end":220,"column_start":40,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/conor/.cargo/registry/src/github.com-1ecc6299db9ec823/seq-0.5.0/src/lib.rs","byte_start":7966,"byte_end":7977,"line_start":255,"line_end":255,"column_start":30,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":5304}}]}